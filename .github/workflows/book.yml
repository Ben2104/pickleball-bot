name: Automatic Pickleball Reservations on PlayByPoint

on:
  workflow_dispatch: # Allows manual trigger
    inputs:
      booking_hour:
        description: 'Booking hour (0-23)'
        required: false
        default: '7'
      booking_minute:
        description: 'Booking minute (0-59)'
        required: false
        default: '0'
      enable_recording:
        description: 'Enable video recording'
        type: boolean
        required: false
        default: true
  repository_dispatch: # Add this for cron-job.org
    types: [pickleball-booking]

jobs:
  Khoi-job:
    name: Khoi Do
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          
      - name: Install Playwright Browsers
        run: |
          npx playwright install

      - name: Create recordings directory
        run: |
          mkdir -p recordings
          echo "üìÅ Created recordings directory"

      - name: Run Pickleball Booking Bot
        run: |
          echo "üéæ Starting pickleball court booking bot..."
          echo "üìÖ Target booking time: ${{ github.event.inputs.booking_hour || '7' }}:${{ github.event.inputs.booking_minute || '0' }} PST"
          echo "üèüÔ∏è Court type: Pickleball"
          echo "üé¨ Recording enabled: ${{ github.event.inputs.enable_recording || 'true' }}"
          echo "üîó Triggered by: ${{ github.event.client_payload.triggered_by || 'GitHub Actions' }}"
          
          # Run with timeout protection
          timeout 20m node reserve.js || echo "‚ö†Ô∏è Bot execution completed or timed out"
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          USER_NAME: Khoi Do
          BOOKING_HOUR: ${{ github.event.inputs.booking_hour || '7' }}
          BOOKING_MINUTE: ${{ github.event.inputs.booking_minute || '0' }}
          ENABLE_RECORDING: ${{ github.event.inputs.enable_recording || 'true' }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          NODE_ENV: production
          GITHUB_ACTIONS: true
          TZ: America/Los_Angeles
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Upload Booking Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kd-report
          path: |
            pickleball-booking-results.zip
            artifacts/
            recordings/
            *.png
            *.webm
          retention-days: 30
          compression-level: 6

      - name: Upload Video Recordings (Separate)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kd-screen-recording
          path: |
            recordings/*.webm
            *.webm
          retention-days: 30
          compression-level: 1
        continue-on-error: true



  Marvin-job:
    name: Marvin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          
      - name: Install Playwright Browsers
        run: |
          npx playwright install

      - name: Create recordings directory
        run: |
          mkdir -p recordings
          echo "üìÅ Created recordings directory"

      - name: Run Pickleball Booking Bot
        run: |
          echo "üéæ Starting pickleball court booking bot..."
          echo "üìÖ Target booking time: ${{ github.event.inputs.booking_hour || '7' }}:${{ github.event.inputs.booking_minute || '0' }} PST"
          echo "üèüÔ∏è Court type: Pickleball"
          echo "üé¨ Recording enabled: ${{ github.event.inputs.enable_recording || 'true' }}"
          echo "üîó Triggered by: ${{ github.event.client_payload.triggered_by || 'GitHub Actions' }}"
          
          # Run with timeout protection
          timeout 20m node reserve.js || echo "‚ö†Ô∏è Bot execution completed or timed out"
        env:
          EMAIL: ${{ secrets.EMAIL2 }}
          PASSWORD: ${{ secrets.PASSWORD2 }}
          USER_NAME: Marvin
          BOOKING_HOUR: ${{ github.event.inputs.booking_hour || '7' }}
          BOOKING_MINUTE: ${{ github.event.inputs.booking_minute || '0' }}
          ENABLE_RECORDING: ${{ github.event.inputs.enable_recording || 'true' }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          NODE_ENV: production
          GITHUB_ACTIONS: true
          TZ: America/Los_Angeles
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Upload Booking Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mv-report
          path: |
            pickleball-booking-results.zip
            artifacts/
            recordings/
            *.png
            *.webm
          retention-days: 30
          compression-level: 6

      - name: Upload Video Recordings (Separate)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mv-screen-recording
          path: |
            recordings/*.webm
            *.webm
          retention-days: 30
          compression-level: 1
        continue-on-error: true

